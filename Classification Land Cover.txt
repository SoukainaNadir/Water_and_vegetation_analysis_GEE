var image = ee.Image(ee.ImageCollection('LANDSAT/LC08/C01/T1_TOA')    
    .filterBounds(geometry)    
    .filterDate('2017-11-01', '2017-12-01')    
    .sort('CLOUD_COVER')    
    .first())
    .clip(geometry);
   
   
Map.addLayer(image, {bands: ['B4', 'B3', 'B2'], max: 0.3}, 'image');
print(image);

//Merge image collections
var landcover = water.merge(vegetation).merge(Build).merge(roads);
print(landcover);

//Create training data
var bands = ['B1','B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8'];
print(bands);

var training = image.select(bands).sampleRegions({
  collection: landcover,
	properties: ['landcover'], 
	scale: 30
});
print(training);

//Train the classifier
var classifier = ee.Classifier.smileCart().train({
	features: training, 
	classProperty: 'landcover', 
	inputProperties: bands
});
print(classifier.explain());

//Run the classification
var classified = image.select(bands).classify(classifier);
print(classified);

//Display classification
Map.addLayer(classified, {min: 1, max: 4, palette: ['red', 'yellow', 'green','blue']});

//Export image to drive
Export.image.toDrive({
  image: classified,
  description: 'classified_image',
  scale: 30,
  crs:'EPSG:4326',
  maxPixels: 1e12
});

// Define the legend
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});

// Create legend title
var legendTitle = ui.Label({
  value: 'Land Cover Classification',
  style: {
    fontWeight: 'bold',
    fontSize: '18px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});

// Add the title to the panel
legend.add(legendTitle);

// Creates and styles 1 row of the legend.
var makeRow = function(color, name) {
  // Create the label that is actually the colored box.
  var colorBox = ui.Label({
    style: {
      backgroundColor: color,
      // Use padding to give the box height and width.
      padding: '8px',
      margin: '0 0 4px 0'
    }
  });

  // Create the label filled with the description text.
  var description = ui.Label({
    value: name,
    style: {margin: '0 0 4px 6px'}
  });

  return ui.Panel({
    widgets: [colorBox, description],
    layout: ui.Panel.Layout.Flow('horizontal')
  });
};

// Add color and names
var palette = ['green', 'red', 'blue','#ffff00'];
var names = ['Vegetation', 'Buildings', 'Water', 'Roads'];

// Add color and names to legend
for (var i = 0; i < 4; i++) {
  legend.add(makeRow(palette[i], names[i]));
}
var title = ui.Label('Land Cover Supervised Classification', {
  fontWeight: 'bold', 
  fontSize: '20px', 
  padding: '0px 10px 0px 10px', // top right bottom left
});
// Add legend to map
Map.add(legend);
Map.add(title)


